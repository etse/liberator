// Code generated by mockery v2.12.1. DO NOT EDIT.

package nais_io_v1

import (
	testing "testing"

	mock "github.com/stretchr/testify/mock"
)

// MockAccessPolicyBaseRules is an autogenerated mock type for the AccessPolicyBaseRules type
type MockAccessPolicyBaseRules struct {
	mock.Mock
}

// GetRules provides a mock function with given fields:
func (_m *MockAccessPolicyBaseRules) GetRules() []AccessPolicyRule {
	ret := _m.Called()

	var r0 []AccessPolicyRule
	if rf, ok := ret.Get(0).(func() []AccessPolicyRule); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]AccessPolicyRule)
		}
	}

	return r0
}

// NewMockAccessPolicyBaseRules creates a new instance of MockAccessPolicyBaseRules. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockAccessPolicyBaseRules(t testing.TB) *MockAccessPolicyBaseRules {
	mock := &MockAccessPolicyBaseRules{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
