spec:
  # Runtime
  container:
    command:
      - python
      - main.py
    env:
      - name: LOG_LEVEL
        value: DEBUG
      - name: PORT
        value: "8080"
    envFrom:
      - configMap: my-cm
      - secret: my-secret
      - configMap: my-other-cm
    filesFrom:
      - secret:
          name: my-other-secret
          mountPath: /somewhere
      - configMap:
          name: my-third-cm
          mountPath: /config
      - emptyDir:
          medium: Memory
          mountPath: /tmp
      - emptyDir:
          medium: Disk
          mountPath: /mnt
      - persistentVolumeClaim:
          name: my-pvc
          mountPath: /tmp
    image: ghcr.io/nais/example:20230302-cafebabe
    liveness:
      failureThreshold: 10
      initialDelay: 20
      path: /isalive
      periodSeconds: 5
      port: 8080
      timeout: 1
    readiness:
      failureThreshold: 10
      initialDelay: 20
      path: /isalive
      periodSeconds: 5
      port: 8080
      timeout: 1
    startup:
      failureThreshold: 10
      initialDelay: 20
      path: /isalive
      periodSeconds: 5
      port: 8080
      timeout: 1
    ports:
      - # TODO
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 200m
        memory: 256Mi
  metrics:
    enabled: true
    path: /metrics
    port: "8080"
  replicas: # TODO
  leaderElection:
    enabled: true
  secureLogs:
    enabled: false
  caBundle:
    enabled: false
  # Communication
  ingress:
    - # TODO
  egress:
    - # TODO
  # Authentication
  azure: # TODO
  maskinporten: # TODO
  tokenx:
    enabled: true
  wonderwall:
    autoLogin: true
    autoLoginIgnorePaths:
      - /path
      - /internal/*
    enabled: true
    errorPath: /error
    resources:
      limits:
        cpu: 250m
        memory: 256Mi
      requests:
        cpu: 20m
        memory: 32Mi
  # Persistence
  influx:
    instance: my-influx
  kafka:
    - pool: nav-dev
      streams: false
    - pool: tbd-dev
      streams: true
  openSearch:
    access: readwrite
    instance: my-open-search-instance
  postgres: # TODO
  bigQuery:
    - cascadingDelete: true
      description: Contains big data, supporting big queries, for use in big ideas.
      name: my_bigquery_dataset1
      permission: READWRITE
    - description: Contains big data, supporting big queries, for use in big ideas.
      name: my_bigquery_dataset2
      permission: READ
  buckets:
    - cascadingDelete: true
      lifecycleCondition:
        age: 10
        createdBefore: "2020-01-01"
        numNewerVersions: 2
        withState: ARCHIVED
      name: my-cloud-storage-bucket
      publicAccessPrevention: true
      retentionPeriodDays: 30
      uniformBucketLevelAccess: true
  # Misc
  rollout:
    type: Recreate
  workloadPermissions:
    - resource:
        apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
        kind: Project
        name: myteam-dev-ab23
      role: roles/cloudsql.client
