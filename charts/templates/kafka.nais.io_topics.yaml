---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: topics.kafka.nais.io
spec:
  group: kafka.nais.io
  names:
    kind: Topic
    listKind: TopicList
    plural: topics
    singular: topic
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.synchronizationState
      name: State
      type: string
    - jsonPath: .status.fullyQualifiedName
      name: Fully Qualified Name
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TopicSpec is a specification of the desired behavior of the
              topic.
            properties:
              acl:
                items:
                  description: TopicACL describes the access granted for the topic.
                  properties:
                    access:
                      description: Access type granted for a application. Defaults
                        to `readwrite`.
                      enum:
                      - read
                      - write
                      - readwrite
                      type: string
                    application:
                      description: The name of the specified application
                      type: string
                    team:
                      description: The team of the specified application
                      type: string
                  required:
                  - access
                  - application
                  - team
                  type: object
                type: array
              config:
                properties:
                  cleanupPolicy:
                    description: CleanupPolicy is either "delete" or "compact" or
                      both. This designates the retention policy to use on old log
                      segments.
                    enum:
                    - delete
                    - compact
                    - compact,delete
                    type: string
                  maxCompactionLagMs:
                    description: MaxCompactionLagMs indicates the maximum time a message
                      will remain ineligible for compaction in the log
                    minimum: 0
                    type: integer
                  maxMessageBytes:
                    description: The largest record batch size allowed by Kafka (after
                      compression if compression is enabled). If this is increased
                      and there are consumers older than 0.10.2, the consumers' fetch
                      size must also be increased so that they can fetch record batches
                      this large. In the latest message format version, records are
                      always grouped into batches for efficiency. In previous message
                      format versions, uncompressed records are not grouped into batches
                      and this limit only applies to a single record in that case.
                    maximum: 5242880
                    minimum: 1
                    type: integer
                  minCleanableDirtyRatioPercent:
                    anyOf:
                    - type: integer
                    - type: string
                    description: MinCleanableDirtyRatio indicates the minimum ratio
                      of dirty log to retention size to initiate log compaction
                    x-kubernetes-int-or-string: true
                  minCompactionLagMs:
                    description: MinCompactionLagMs indicates the minimum time a message
                      will remain uncompacted in the log
                    minimum: 0
                    type: integer
                  minimumInSyncReplicas:
                    description: When a producer sets acks to "all" (or "-1"), `min.insync.replicas`
                      specifies the minimum number of replicas that must acknowledge
                      a write for the write to be considered successful.
                    maximum: 7
                    minimum: 1
                    type: integer
                  partitions:
                    description: The default number of log partitions per topic.
                    maximum: 1000000
                    minimum: 1
                    type: integer
                  replication:
                    description: The default replication factor for created topics.
                    minimum: 2
                    type: integer
                  retentionBytes:
                    description: Configuration controls the maximum size a partition
                      can grow to before we will discard old log segments to free
                      up space if we are using the "delete" retention policy. By default
                      there is no size limit only a time limit. Since this limit is
                      enforced at the partition level, multiply it by the number of
                      partitions to compute the topic retention in bytes.
                    type: integer
                  retentionHours:
                    description: The number of hours to keep a log file before deleting
                      it.
                    maximum: 2562047788015
                    type: integer
                  segmentHours:
                    description: The number of hours after which Kafka will force
                      the log to roll even if the segment file isn't full to ensure
                      that retention can delete or compact old data.
                    maximum: 8760
                    minimum: 1
                    type: integer
                type: object
              pool:
                type: string
            required:
            - acl
            - pool
            type: object
          status:
            properties:
              conditions:
                description: Represents the latest available observations of the resource
                  current state.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              errors:
                items:
                  type: string
                type: array
              fullyQualifiedName:
                type: string
              latestAivenSyncFailure:
                type: string
              message:
                type: string
              observedGeneration:
                description: ObservedGeneration is the generation most recently observed
                format: int64
                type: integer
              synchronizationHash:
                description: SynchronizationHash is the hash of the object most recently
                  successfully synchronized
                type: string
              synchronizationState:
                description: SynchronizationState is the result of the most recent
                  synchronization
                type: integer
              synchronizationTime:
                description: SynchronizationTime is the last time the Status subresource
                  was updated
                format: date-time
                type: string
              synchronizedGeneration:
                description: SynchronizedGeneration is the generation most recently
                  successfully synchronized
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources: {}
